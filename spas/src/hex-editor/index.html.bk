<template id="app-main" vide-model> </template>
<!-- <html>

<head>
  <title>Editor</title>
  <meta charset="utf-8">
  <meta name="viewport"
    content="width=device-width, initial-scale=1, maximum-scale=1.0, user-scalable=no, shrink-to-fit=no">
  <script>
    class App {

      async  init() {
        document.getElementById('file').onchange = (e) => {
          var file = e.target.files[0];
          if (file) {
            this.openFile(file);
          }
        }
        this.ediFile = document.getElementById('ediFile');
        this.lineWidth = 16;
      }

      readFile(file) {
        return new Promise((resolve, reject) => {
          var reader = new FileReader();
          reader.onload = (e) => {
            resolve(e.target.result);
          }
          reader.readAsArrayBuffer(file);
        })
      }

      async  openFile(file) {
        var buffer = await this.readFile(file);
        this.data = new Uint8Array(buffer);
        this.updateFile();
      }

      updateFile() {
        this.ediFile.innerHTML = '';
        this.lineCount = Math.ceil(this.data.length / this.lineWidth);
        var lines = [];
        for (var i = 0; i < this.lineCount; i++) {
          var lineData = new Uint8Array(this.data.buffer, i * this.lineWidth, Math.min(this.lineWidth, this.data.length - i * this.lineWidth));
          lines.push(lineData);
          var ediLine = document.createElement('div');
          ediLine.classList.add('line');
          this.ediFile.appendChild(ediLine);
          this.updateLine(lineData, ediLine);
        }
      }

      updateLine(lineData, ediLine) {
        ediLine.innerHTML = '';
        var ediCharLine = document.createElement('div');
        ediCharLine.classList.add('char-line');
        ediLine.appendChild(ediCharLine);
        var ediStrLine = document.createElement('div');
        ediStrLine.classList.add('str-line');
        for (var i = 0; i < this.lineWidth; i++) {
          var ediChar = document.createElement('div');
          ediChar.classList.add('char');
          ediCharLine.appendChild(ediChar);
          var ediStrChar = document.createElement('div');
          ediStrChar.classList.add('str-char');
          ediStrLine.appendChild(ediStrChar);
          if (lineData.byteOffset + i < this.data.length) {
            var charData = new Uint8Array(lineData.buffer, lineData.byteOffset + i, 1);
            this.updateChar(charData, ediChar, ediStrChar);
          }

        }
        ediLine.append(ediStrLine);
      }

      updateChar(charData, ediChar, ediStrChar) {
        ediChar.innerHTML = '';
        ediStrChar.innerHTML = '';
        if (charData != null && charData.length > 0) {
          ediChar.onclick = () => this.selectChar(ediChar, ediStrChar);
          ediStrChar.onclick = () => this.selectChar(ediChar, ediStrChar);
          ediChar.innerText = charData[0].toString(16).padStart(2, '0');
          var str = String.fromCharCode(charData);
          if (!/\s/.test(str)) {
            ediStrChar.innerText = str;
          } else {
            ediStrChar.innerText = '.';
          }
        }
      }

      selectChar(ediChar, ediStrChar) {
        if (this.selectedChar == ediChar && this.selectedStrChar == ediStrChar) {
          return
        }
        if (this.selectedChar) {
          this.selectedChar.classList.remove('select');
        }
        if (this.selectedStrChar) {
          this.selectedStrChar.classList.remove('select');
        }
        this.selectedChar = ediChar;
        this.selectedStrChar = ediStrChar;
        if (this.selectedChar) {
          this.selectedChar.classList.add('select');
        }
        if (this.selectedStrChar) {
          this.selectedStrChar.classList.add('select');
        }

      }
    }

    window.onload = () => new App().init();
  </script>
</head>
<style>
  #ediFile {
    display: flex;
    flex-direction: column;
  }

  #header {
    display: flex;
    align-items: center;
    flex-direction: column;
  }

  .line {
    display: flex;
    margin: 2 0;
  }

  .char-line {
    display: inline-flex;
  }

  .str-line {
    flex: 1;
    display: inline-block;
  }

  .char {
    border-width: 1;
    border-style: groove;
    margin: 0 2;
    width: 1.5em;
    text-align: center;
  }

  .char.select {
    background: yellow !important;
  }

  .str-char {
    display: inline;
  }

  .str-char.select {
    background: yellow !important;
  }
</style>

<body>
  <div id="header">
    <input type="file" id='file' />
  </div>
  <div id="ediFile">
  </div>
</body>

</html> -->
