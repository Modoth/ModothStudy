/* 
 * api
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing CommentApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class CommentApiTests
    {
        private CommentApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new CommentApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of CommentApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' CommentApi
            //Assert.IsInstanceOfType(typeof(CommentApi), instance, "instance is a CommentApi");
        }

        
        /// <summary>
        /// Test AddComment
        /// </summary>
        [Test]
        public void AddCommentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? blogId = null;
            //string detail = null;
            //var response = instance.AddComment(blogId, detail);
            //Assert.IsInstanceOf<ApiResultGuid> (response, "response is ApiResultGuid");
        }
        
        /// <summary>
        /// Test AddSubcomment
        /// </summary>
        [Test]
        public void AddSubcommentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? commentId = null;
            //string detail = null;
            //var response = instance.AddSubcomment(commentId, detail);
            //Assert.IsInstanceOf<ApiResult> (response, "response is ApiResult");
        }
        
        /// <summary>
        /// Test DeleteComment
        /// </summary>
        [Test]
        public void DeleteCommentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? commentId = null;
            //var response = instance.DeleteComment(commentId);
            //Assert.IsInstanceOf<ApiResult> (response, "response is ApiResult");
        }
        
        /// <summary>
        /// Test GetBlogComments
        /// </summary>
        [Test]
        public void GetBlogCommentsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? blogId = null;
            //int? skip = null;
            //int? count = null;
            //var response = instance.GetBlogComments(blogId, skip, count);
            //Assert.IsInstanceOf<ApiResultPagedResultCommentItem> (response, "response is ApiResultPagedResultCommentItem");
        }
        
        /// <summary>
        /// Test GetSubcomments
        /// </summary>
        [Test]
        public void GetSubcommentsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? commentId = null;
            //int? skip = null;
            //int? count = null;
            //var response = instance.GetSubcomments(commentId, skip, count);
            //Assert.IsInstanceOf<ApiResultPagedResultCommentItem> (response, "response is ApiResultPagedResultCommentItem");
        }
        
    }

}
