<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="backgroundWorker1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
</root>